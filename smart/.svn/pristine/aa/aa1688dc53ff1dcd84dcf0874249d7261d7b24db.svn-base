package com.lb.app.automation.service;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import com.lb.app.automation.dao.IAutoScriptDao;
import com.lb.app.automation.dao.IAutoSubModuleDao;
import com.lb.app.automation.dao.IAutoTestcaseDao;
import com.lb.app.automation.model.AutoScript;
import com.lb.app.automation.model.AutoTestcase;

@Service

public class AutoTestcaseService {

	final private static Log log = LogFactory.getLog(AutoTestcaseService.class);

	@Autowired
	IAutoScriptDao scriptDao;
	@Autowired
	IAutoSubModuleDao submoduleDao;
	@Autowired
	IAutoTestcaseDao testcaseDao;
	
	public List<AutoTestcase> saveOrUpdate(List<AutoTestcase> testcases){
		for(AutoTestcase t: testcases){
			if(!StringUtils.isEmpty(t.getScriptid()))
				t.setScript(scriptDao.get(t.getScriptid()));
			if(StringUtils.isEmpty(t.getTestcaseid()))
				testcaseDao.create(t);
			else
				testcaseDao.update(t);
		}
		return testcases;
	}
	
	public List<AutoTestcase> load(String submodule_id){
		
		
		List<AutoScript> scripts = scriptDao.findbyCriteria(Restrictions.eq("submodule", submoduleDao.get(submodule_id)));
		List<AutoTestcase> testcases = testcaseDao.findbyCriteria(Restrictions.in("script", scripts));
		for(AutoTestcase t : testcases){
			t.setScriptid(t.getScript().getScriptid());
		}
		return testcases;
	}
	
	public void destroy(List<AutoTestcase> testcases){
		for(AutoTestcase t: testcases){
			testcaseDao.delete(t);
		}
	}
}
